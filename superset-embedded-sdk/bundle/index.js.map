{"version":3,"file":"index.js","mappings":"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","sources":["webpack://supersetEmbeddedSdk/webpack/universalModuleDefinition","webpack://supersetEmbeddedSdk/./node_modules/@superset-ui/switchboard/esm/switchboard.js","webpack://supersetEmbeddedSdk/webpack/bootstrap","webpack://supersetEmbeddedSdk/webpack/runtime/define property getters","webpack://supersetEmbeddedSdk/webpack/runtime/harmony module decorator","webpack://supersetEmbeddedSdk/webpack/runtime/hasOwnProperty shorthand","webpack://supersetEmbeddedSdk/webpack/runtime/make namespace object","webpack://supersetEmbeddedSdk/./src/const.ts","webpack://supersetEmbeddedSdk/./node_modules/jwt-decode/build/jwt-decode.esm.js","webpack://supersetEmbeddedSdk/./src/guestTokenRefresh.ts","webpack://supersetEmbeddedSdk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"supersetEmbeddedSdk\"] = factory();\n\telse\n\t\troot[\"supersetEmbeddedSdk\"] = factory();\n})(globalThis, () => {\nreturn ","(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Each message we send on the channel specifies an action we want the other side to cooperate with.\nvar Actions;(function (Actions) {Actions[\"GET\"] = \"get\";Actions[\"REPLY\"] = \"reply\";Actions[\"EMIT\"] = \"emit\";Actions[\"ERROR\"] = \"error\";})(Actions || (Actions = {}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isGet(message) {\n  return message.switchboardAction === Actions.GET;\n}\n\n\n\n\n\n\n\nfunction isReply(message) {\n  return message.switchboardAction === Actions.REPLY;\n}\n\n\n\n\n\n\n\nfunction isEmit(message) {\n  return message.switchboardAction === Actions.EMIT;\n}\n\n\n\n\n\n\n\nfunction isError(message) {\n  return message.switchboardAction === Actions.ERROR;\n}\n\n/**\n * A utility for communications between an iframe and its parent, used by the Superset embedded SDK.\n * This builds useful patterns on top of the basic functionality offered by MessageChannel.\n *\n * Both windows instantiate a Switchboard, passing in their MessagePorts.\n * Calling methods on the switchboard causes messages to be sent through the channel.\n */\nexport class Switchboard {\n\n\n\n\n\n\n  // used to make unique ids\n\n\n\n\n\n\n  constructor(params) {this.port = void 0;this.name = '';this.methods = {};this.incrementor = 1;this.debugMode = void 0;this.isInitialised = void 0;\n    if (!params) {\n      return;\n    }\n    this.init(params);\n  }\n\n  init(params) {\n    if (this.isInitialised) {\n      this.logError('already initialized');\n      return;\n    }\n\n    const { port, name = 'switchboard', debug = false } = params;\n\n    this.port = port;\n    this.name = name;\n    this.debugMode = debug;\n\n    port.addEventListener('message', async (event) => {\n      this.log('message received', event);\n      const message = event.data;\n      if (isGet(message)) {\n        // find the method, call it, and reply with the result\n        this.port.postMessage(await this.getMethodResult(message));\n      } else if (isEmit(message)) {\n        const { method, args } = message;\n        // Find the method and call it, but no result necessary.\n        // Should this multicast to a set of listeners?\n        // Maybe, but that requires writing a bunch more code\n        // and I haven't found a need for it yet.\n        const executor = this.methods[method];\n        if (executor) {\n          executor(args);\n        }\n      }\n    });\n\n    this.isInitialised = true;\n  }\n\n  async getMethodResult(_ref)\n\n\n\n  {let { messageId, method, args } = _ref;\n    const executor = this.methods[method];\n    if (executor == null) {\n      return {\n        switchboardAction: Actions.ERROR,\n        messageId,\n        error: `[${this.name}] Method \"${method}\" is not defined` };\n\n    }\n    try {\n      const result = await executor(args);\n      return {\n        switchboardAction: Actions.REPLY,\n        messageId,\n        result };\n\n    } catch (err) {\n      this.logError(err);\n      return {\n        switchboardAction: Actions.ERROR,\n        messageId,\n        error: `[${this.name}] Method \"${method}\" threw an error` };\n\n    }\n  }\n\n  /**\n   * Defines a method that can be \"called\" from the other side by sending an event.\n   */\n  defineMethod(methodName, executor) {\n    this.methods[methodName] = executor;\n  }\n\n  /**\n   * Calls a method registered on the other side, and returns the result.\n   *\n   * How this is accomplished:\n   * This switchboard sends a \"get\" message over the channel describing which method to call with which arguments.\n   * The other side's switchboard finds a method with that name, and calls it with the arguments.\n   * It then packages up the returned value into a \"reply\" message, sending it back to us across the channel.\n   * This switchboard has attached a listener on the channel, which will resolve with the result when a reply is detected.\n   *\n   * Instead of an arguments list, arguments are supplied as a map.\n   *\n   * @param method the name of the method to call\n   * @param args arguments that will be supplied. Must be serializable, no functions or other nonense.\n   * @returns whatever is returned from the method\n   */\n  get(method, args) {if (args === void 0) {args = undefined;}\n    return new Promise((resolve, reject) => {\n      if (!this.isInitialised) {\n        reject(new Error('Switchboard not initialised'));\n        return;\n      }\n      // In order to \"call a method\" on the other side of the port,\n      // we will send a message with a unique id\n      const messageId = this.getNewMessageId();\n      // attach a new listener to our port, and remove it when we get a response\n      const listener = (event) => {\n        const message = event.data;\n        if (message.messageId !== messageId) return;\n        this.port.removeEventListener('message', listener);\n        if (isReply(message)) {\n          resolve(message.result);\n        } else {\n          const errStr = isError(message) ?\n          message.error :\n          'Unexpected response message';\n          reject(new Error(errStr));\n        }\n      };\n      this.port.addEventListener('message', listener);\n      this.port.start();\n      const message = {\n        switchboardAction: Actions.GET,\n        method,\n        messageId,\n        args };\n\n      this.port.postMessage(message);\n    });\n  }\n\n  /**\n   * Emit calls a method on the other side just like get does.\n   * But emit doesn't wait for a response, it just sends and forgets.\n   *\n   * @param method\n   * @param args\n   */\n  emit(method, args) {if (args === void 0) {args = undefined;}\n    if (!this.isInitialised) {\n      this.logError('Switchboard not initialised');\n      return;\n    }\n    const message = {\n      switchboardAction: Actions.EMIT,\n      method,\n      args };\n\n    this.port.postMessage(message);\n  }\n\n  start() {\n    if (!this.isInitialised) {\n      this.logError('Switchboard not initialised');\n      return;\n    }\n    this.port.start();\n  }\n\n  log() {\n    if (this.debugMode) {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n      console.debug(`[${this.name}]`, ...args);\n    }\n  }\n\n  logError() {for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {args[_key2] = arguments[_key2];}\n    console.error(`[${this.name}]`, ...args);\n  }\n\n  getNewMessageId() {\n    // eslint-disable-next-line no-plusplus\n    return `m_${this.name}_${this.incrementor++}`;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default =\nnew Switchboard();export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isGet, \"isGet\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isReply, \"isReply\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isEmit, \"isEmit\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isError, \"isError\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(Switchboard, \"Switchboard\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(_default, \"default\", \"/Users/ville/apple/apache-superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const IFRAME_COMMS_MESSAGE_TYPE = \"__embedded_comms__\";\nexport const DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY: { [index: string]: any } = {\n  visible: \"show_filters\",\n  expanded: \"expand_filters\",\n}\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport jwt_decode from \"jwt-decode\";\n\nexport const REFRESH_TIMING_BUFFER_MS = 5000 // refresh guest token early to avoid failed superset requests\nexport const MIN_REFRESH_WAIT_MS = 10000 // avoid blasting requests as fast as the cpu can handle\nexport const DEFAULT_TOKEN_EXP_MS = 300000 // (5 min) used only when parsing guest token exp fails\n\n// when do we refresh the guest token?\nexport function getGuestTokenRefreshTiming(currentGuestToken: string) {\n  const parsedJwt = jwt_decode<Record<string, any>>(currentGuestToken);\n  // if exp is int, it is in seconds, but Date() takes milliseconds\n  const exp = new Date(/[^0-9\\.]/g.test(parsedJwt.exp) ? parsedJwt.exp : parseFloat(parsedJwt.exp) * 1000);\n  const isValidDate = exp.toString() !== 'Invalid Date';\n  const ttl = isValidDate ? Math.max(MIN_REFRESH_WAIT_MS, exp.getTime() - Date.now()) : DEFAULT_TOKEN_EXP_MS;\n  return ttl - REFRESH_TIMING_BUFFER_MS;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY,\n  IFRAME_COMMS_MESSAGE_TYPE\n} from './const';\n\n// We can swap this out for the actual switchboard package once it gets published\nimport { Switchboard } from '@superset-ui/switchboard';\nimport { getGuestTokenRefreshTiming } from './guestTokenRefresh';\n\n/**\n * The function to fetch a guest token from your Host App's backend server.\n * The Host App backend must supply an API endpoint\n * which returns a guest token with appropriate resource access.\n */\nexport type GuestTokenFetchFn = () => Promise<string>;\n\nexport type UiConfigType = {\n  hideTitle?: boolean\n  hideTab?: boolean\n  hideChartControls?: boolean\n  filters?: {\n    [key: string]: boolean | undefined\n    visible?: boolean\n    expanded?: boolean\n  }\n  urlParams?: {[key: string]: any}\n}\n\nexport type EmbedDashboardParams = {\n  /** The id provided by the embed configuration UI in Superset */\n  id: string\n  /** The domain where Superset can be located, with protocol, such as: https://superset.example.com */\n  supersetDomain: string\n  /** The html element within which to mount the iframe */\n  mountPoint: HTMLElement\n  /** A function to fetch a guest token from the Host App's backend server */\n  fetchGuestToken: GuestTokenFetchFn\n  /** The dashboard UI config: hideTitle, hideTab, hideChartControls, filters.visible, filters.expanded **/\n  dashboardUiConfig?: UiConfigType\n  /** Are we in debug mode? */\n  debug?: boolean\n}\n\nexport type Size = {\n  width: number, height: number\n}\n\nexport type EmbeddedDashboard = {\n  getScrollSize: () => Promise<Size>\n  unmount: () => void\n  getDashboardPermalink: (anchor: string) => Promise<string>\n  getActiveTabs: () => Promise<string[]>\n}\n\n/**\n * Embeds a Superset dashboard into the page using an iframe.\n */\nexport async function embedDashboard({\n  id,\n  supersetDomain,\n  mountPoint,\n  fetchGuestToken,\n  dashboardUiConfig,\n  debug = false\n}: EmbedDashboardParams): Promise<EmbeddedDashboard> {\n  function log(...info: unknown[]) {\n    if (debug) {\n      console.debug(`[superset-embedded-sdk][dashboard ${id}]`, ...info);\n    }\n  }\n\n  log('embedding');\n\n  if (supersetDomain.endsWith(\"/\")) {\n    supersetDomain = supersetDomain.slice(0, -1);\n  }\n\n  function calculateConfig() {\n    let configNumber = 0\n    if(dashboardUiConfig) {\n      if(dashboardUiConfig.hideTitle) {\n        configNumber += 1\n      }\n      if(dashboardUiConfig.hideTab) {\n        configNumber += 2\n      }\n      if(dashboardUiConfig.hideChartControls) {\n        configNumber += 8\n      }\n    }\n    return configNumber\n  }\n\n  async function mountIframe(): Promise<Switchboard> {\n    return new Promise(resolve => {\n      const iframe = document.createElement('iframe');\n      const dashboardConfig = dashboardUiConfig ? `?uiConfig=${calculateConfig()}` : \"\"\n      const filterConfig = dashboardUiConfig?.filters || {}\n      const filterConfigKeys = Object.keys(filterConfig)\n      const filterConfigUrlParams = filterConfigKeys.length > 0\n        ? \"&\"\n        + filterConfigKeys\n          .map(key => DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY[key] + '=' + filterConfig[key]).join('&')\n        : \"\"\n\n      let extraUrlParams = new URLSearchParams(dashboardUiConfig?.urlParams || window.location.search).toString()\n      if (!!extraUrlParams) extraUrlParams = \"&\" + extraUrlParams\n      if (debug) {\n        console.debug(`[superset-embedded-sdk][extraUrlParams]`, extraUrlParams);\n      }\n\n      // set up the iframe's sandbox configuration\n      iframe.sandbox.add(\"allow-same-origin\"); // needed for postMessage to work\n      iframe.sandbox.add(\"allow-scripts\"); // obviously the iframe needs scripts\n      iframe.sandbox.add(\"allow-presentation\"); // for fullscreen charts\n      iframe.sandbox.add(\"allow-downloads\"); // for downloading charts as image\n      iframe.sandbox.add(\"allow-forms\"); // for forms to submit\n      iframe.sandbox.add(\"allow-popups\"); // for exporting charts as csv\n      // add these if it turns out we need them:\n      // iframe.sandbox.add(\"allow-top-navigation\");\n\n      // add the event listener before setting src, to be 100% sure that we capture the load event\n      iframe.addEventListener('load', () => {\n        // MessageChannel allows us to send and receive messages smoothly between our window and the iframe\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n        const commsChannel = new MessageChannel();\n        const ourPort = commsChannel.port1;\n        const theirPort = commsChannel.port2;\n\n        // Send one of the message channel ports to the iframe to initialize embedded comms\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        // we know the content window isn't null because we are in the load event handler.\n        iframe.contentWindow!.postMessage(\n          { type: IFRAME_COMMS_MESSAGE_TYPE, handshake: \"port transfer\" },\n          supersetDomain,\n          [theirPort],\n        )\n        log('sent message channel to the iframe');\n\n        // return our port from the promise\n        resolve(new Switchboard({ port: ourPort, name: 'superset-embedded-sdk', debug }));\n      });\n\n      iframe.src = `${supersetDomain}/embedded/${id}${dashboardConfig}${filterConfigUrlParams}${extraUrlParams}`;\n      //@ts-ignore\n      mountPoint.replaceChildren(iframe);\n      log('placed the iframe')\n    });\n  }\n\n  const [guestToken, ourPort]: [string, Switchboard] = await Promise.all([\n    fetchGuestToken(),\n    mountIframe(),\n  ]);\n\n  ourPort.emit('guestToken', { guestToken });\n  log('sent guest token');\n\n  async function refreshGuestToken() {\n    const newGuestToken = await fetchGuestToken();\n    ourPort.emit('guestToken', { guestToken: newGuestToken });\n    setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(newGuestToken));\n  }\n\n  setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(guestToken));\n\n  function unmount() {\n    log('unmounting');\n    //@ts-ignore\n    mountPoint.replaceChildren();\n  }\n\n  const getScrollSize = () => ourPort.get<Size>('getScrollSize');\n  const getDashboardPermalink = (anchor: string) =>\n    ourPort.get<string>('getDashboardPermalink', { anchor });\n  const getActiveTabs = () => ourPort.get<string[]>('getActiveTabs')\n\n  return {\n    getScrollSize,\n    unmount,\n    getDashboardPermalink,\n    getActiveTabs,\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","globalThis","enterModule","reactHotLoaderGlobal","undefined","__signature__","default","signature","a","Actions","isGet","message","switchboardAction","GET","isReply","REPLY","isEmit","EMIT","isError","ERROR","Switchboard","constructor","params","this","port","name","methods","incrementor","debugMode","isInitialised","init","logError","debug","addEventListener","async","event","log","data","postMessage","getMethodResult","method","args","executor","_ref","messageId","error","result","err","defineMethod","methodName","get","Promise","resolve","reject","Error","getNewMessageId","listener","removeEventListener","errStr","start","emit","_len","arguments","length","Array","_key","console","_len2","_key2","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","leaveModule","register","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","hmd","create","children","set","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","IFRAME_COMMS_MESSAGE_TYPE","DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY","visible","expanded","e","window","atob","bind","t","String","replace","n","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","JSON","parse","split","REFRESH_TIMING_BUFFER_MS","MIN_REFRESH_WAIT_MS","DEFAULT_TOKEN_EXP_MS","getGuestTokenRefreshTiming","currentGuestToken","parsedJwt","jwt_decode","exp","Date","test","parseFloat","Math","max","getTime","now","embedDashboard","supersetDomain","mountPoint","fetchGuestToken","dashboardUiConfig","info","endsWith","slice","guestToken","ourPort","all","iframe","document","createElement","dashboardConfig","configNumber","hideTitle","hideTab","hideChartControls","calculateConfig","filterConfig","filters","filterConfigKeys","keys","filterConfigUrlParams","map","join","extraUrlParams","URLSearchParams","urlParams","location","search","sandbox","add","commsChannel","MessageChannel","port1","theirPort","port2","contentWindow","type","handshake","src","replaceChildren","mountIframe","setTimeout","refreshGuestToken","newGuestToken","getScrollSize","unmount","getDashboardPermalink","anchor","getActiveTabs"],"sourceRoot":""}